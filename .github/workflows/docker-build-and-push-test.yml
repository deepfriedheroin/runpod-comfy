name: Docker Build, Test and Push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY_GITHUB: ghcr.io
  REGISTRY_DOCKERHUB: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY_GITHUB }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}
          ${{ env.REGISTRY_DOCKERHUB }}/${{ env.IMAGE_NAME }}

    - name: Build and export to Docker
      uses: docker/build-push-action@v4
      with:
        context: .
        load: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Test
      run: |
        docker run --rm ${{ steps.meta.outputs.tags }} python -c "import torch; print(f'PyTorch version: {torch.__version__}')"
        docker run --rm ${{ steps.meta.outputs.tags }} python -c "import xformers; print(f'xformers version: {xformers.__version__}')"
        docker run --rm ${{ steps.meta.outputs.tags }} jupyter --version
        docker run --rm ${{ steps.meta.outputs.tags }} code-server --version
        docker run --rm ${{ steps.meta.outputs.tags }} python -c "import os; print(f'ComfyUI-Manager installed: {os.path.exists(\"/workspace/ComfyUI/custom_nodes/ComfyUI-Manager\")}')"

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}